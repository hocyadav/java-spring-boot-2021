/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.flipkart.marketplace.listings.schema.reverse.listing;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class buying_criteria extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4726046235726521669L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"buying_criteria\",\"namespace\":\"com.flipkart.marketplace.listings.schema.reverse.listing\",\"fields\":[{\"name\":\"origin\",\"type\":\"string\",\"presentationName\":\"Origin\",\"description\":\"Origin of the product.\"},{\"name\":\"tenure\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"buying_criteria_tenure\",\"fields\":[{\"name\":\"end\",\"type\":\"int\",\"presentationName\":\"Tenure End\",\"description\":\"End of the tenure\"},{\"name\":\"start\",\"type\":\"int\",\"presentationName\":\"Tenure Start\",\"description\":\"Start of the tenure\"},{\"name\":\"unit\",\"type\":\"string\",\"presentationName\":\"Tenure Unit\",\"description\":\"Unit of the tenure\"}],\"version\":\"1.0\"}],\"default\":null,\"presentationName\":\"Tenure\",\"description\":\"Criteria tenure.\"},{\"name\":\"grade\",\"type\":\"string\",\"presentationName\":\"Grade\",\"description\":\"Grade refers to the condition of the product.\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence origin;
  @Deprecated public com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure tenure;
  @Deprecated public java.lang.CharSequence grade;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public buying_criteria() {}

  /**
   * All-args constructor.
   * @param origin The new value for origin
   * @param tenure The new value for tenure
   * @param grade The new value for grade
   */
  public buying_criteria(java.lang.CharSequence origin, com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure tenure, java.lang.CharSequence grade) {
    this.origin = origin;
    this.tenure = tenure;
    this.grade = grade;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return origin;
    case 1: return tenure;
    case 2: return grade;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: origin = (java.lang.CharSequence)value$; break;
    case 1: tenure = (com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure)value$; break;
    case 2: grade = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'origin' field.
   * @return The value of the 'origin' field.
   */
  public java.lang.CharSequence getOrigin() {
    return origin;
  }

  /**
   * Sets the value of the 'origin' field.
   * @param value the value to set.
   */
  public void setOrigin(java.lang.CharSequence value) {
    this.origin = value;
  }

  /**
   * Gets the value of the 'tenure' field.
   * @return The value of the 'tenure' field.
   */
  public com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure getTenure() {
    return tenure;
  }

  /**
   * Sets the value of the 'tenure' field.
   * @param value the value to set.
   */
  public void setTenure(com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure value) {
    this.tenure = value;
  }

  /**
   * Gets the value of the 'grade' field.
   * @return The value of the 'grade' field.
   */
  public java.lang.CharSequence getGrade() {
    return grade;
  }

  /**
   * Sets the value of the 'grade' field.
   * @param value the value to set.
   */
  public void setGrade(java.lang.CharSequence value) {
    this.grade = value;
  }

  /**
   * Creates a new buying_criteria RecordBuilder.
   * @return A new buying_criteria RecordBuilder
   */
  public static com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria.Builder newBuilder() {
    return new com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria.Builder();
  }

  /**
   * Creates a new buying_criteria RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new buying_criteria RecordBuilder
   */
  public static com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria.Builder newBuilder(com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria.Builder other) {
    return new com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria.Builder(other);
  }

  /**
   * Creates a new buying_criteria RecordBuilder by copying an existing buying_criteria instance.
   * @param other The existing instance to copy.
   * @return A new buying_criteria RecordBuilder
   */
  public static com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria.Builder newBuilder(com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria other) {
    return new com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria.Builder(other);
  }

  /**
   * RecordBuilder for buying_criteria instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<buying_criteria>
    implements org.apache.avro.data.RecordBuilder<buying_criteria> {

    private java.lang.CharSequence origin;
    private com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure tenure;
    private com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure.Builder tenureBuilder;
    private java.lang.CharSequence grade;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.origin)) {
        this.origin = data().deepCopy(fields()[0].schema(), other.origin);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.tenure)) {
        this.tenure = data().deepCopy(fields()[1].schema(), other.tenure);
        fieldSetFlags()[1] = true;
      }
      if (other.hasTenureBuilder()) {
        this.tenureBuilder = com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure.newBuilder(other.getTenureBuilder());
      }
      if (isValidValue(fields()[2], other.grade)) {
        this.grade = data().deepCopy(fields()[2].schema(), other.grade);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing buying_criteria instance
     * @param other The existing instance to copy.
     */
    private Builder(com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.origin)) {
        this.origin = data().deepCopy(fields()[0].schema(), other.origin);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.tenure)) {
        this.tenure = data().deepCopy(fields()[1].schema(), other.tenure);
        fieldSetFlags()[1] = true;
      }
      this.tenureBuilder = null;
      if (isValidValue(fields()[2], other.grade)) {
        this.grade = data().deepCopy(fields()[2].schema(), other.grade);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'origin' field.
      * @return The value.
      */
    public java.lang.CharSequence getOrigin() {
      return origin;
    }

    /**
      * Sets the value of the 'origin' field.
      * @param value The value of 'origin'.
      * @return This builder.
      */
    public com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria.Builder setOrigin(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.origin = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'origin' field has been set.
      * @return True if the 'origin' field has been set, false otherwise.
      */
    public boolean hasOrigin() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'origin' field.
      * @return This builder.
      */
    public com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria.Builder clearOrigin() {
      origin = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'tenure' field.
      * @return The value.
      */
    public com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure getTenure() {
      return tenure;
    }

    /**
      * Sets the value of the 'tenure' field.
      * @param value The value of 'tenure'.
      * @return This builder.
      */
    public com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria.Builder setTenure(com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure value) {
      validate(fields()[1], value);
      this.tenureBuilder = null;
      this.tenure = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'tenure' field has been set.
      * @return True if the 'tenure' field has been set, false otherwise.
      */
    public boolean hasTenure() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'tenure' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure.Builder getTenureBuilder() {
      if (tenureBuilder == null) {
        if (hasTenure()) {
          setTenureBuilder(com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure.newBuilder(tenure));
        } else {
          setTenureBuilder(com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure.newBuilder());
        }
      }
      return tenureBuilder;
    }

    /**
     * Sets the Builder instance for the 'tenure' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria.Builder setTenureBuilder(com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure.Builder value) {
      clearTenure();
      tenureBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'tenure' field has an active Builder instance
     * @return True if the 'tenure' field has an active Builder instance
     */
    public boolean hasTenureBuilder() {
      return tenureBuilder != null;
    }

    /**
      * Clears the value of the 'tenure' field.
      * @return This builder.
      */
    public com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria.Builder clearTenure() {
      tenure = null;
      tenureBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'grade' field.
      * @return The value.
      */
    public java.lang.CharSequence getGrade() {
      return grade;
    }

    /**
      * Sets the value of the 'grade' field.
      * @param value The value of 'grade'.
      * @return This builder.
      */
    public com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria.Builder setGrade(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.grade = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'grade' field has been set.
      * @return True if the 'grade' field has been set, false otherwise.
      */
    public boolean hasGrade() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'grade' field.
      * @return This builder.
      */
    public com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria.Builder clearGrade() {
      grade = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public buying_criteria build() {
      try {
        buying_criteria record = new buying_criteria();
        record.origin = fieldSetFlags()[0] ? this.origin : (java.lang.CharSequence) defaultValue(fields()[0]);
        if (tenureBuilder != null) {
          record.tenure = this.tenureBuilder.build();
        } else {
          record.tenure = fieldSetFlags()[1] ? this.tenure : (com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure) defaultValue(fields()[1]);
        }
        record.grade = fieldSetFlags()[2] ? this.grade : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
