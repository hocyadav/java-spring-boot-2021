/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.flipkart.marketplace.listings.schema.reverse.listing;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class seller_identifier extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1154250862617094033L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"seller_identifier\",\"namespace\":\"com.flipkart.marketplace.listings.schema.reverse.listing\",\"fields\":[{\"name\":\"product_id\",\"type\":\"string\",\"presentationName\":\"FSN\",\"description\":\"Catalog product ID\"},{\"name\":\"sku_id\",\"type\":\"string\",\"presentationName\":\"SKU ID\",\"description\":\"Seller SKU ID\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence product_id;
  @Deprecated public java.lang.CharSequence sku_id;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public seller_identifier() {}

  /**
   * All-args constructor.
   * @param product_id The new value for product_id
   * @param sku_id The new value for sku_id
   */
  public seller_identifier(java.lang.CharSequence product_id, java.lang.CharSequence sku_id) {
    this.product_id = product_id;
    this.sku_id = sku_id;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return product_id;
    case 1: return sku_id;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: product_id = (java.lang.CharSequence)value$; break;
    case 1: sku_id = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'product_id' field.
   * @return The value of the 'product_id' field.
   */
  public java.lang.CharSequence getProductId() {
    return product_id;
  }

  /**
   * Sets the value of the 'product_id' field.
   * @param value the value to set.
   */
  public void setProductId(java.lang.CharSequence value) {
    this.product_id = value;
  }

  /**
   * Gets the value of the 'sku_id' field.
   * @return The value of the 'sku_id' field.
   */
  public java.lang.CharSequence getSkuId() {
    return sku_id;
  }

  /**
   * Sets the value of the 'sku_id' field.
   * @param value the value to set.
   */
  public void setSkuId(java.lang.CharSequence value) {
    this.sku_id = value;
  }

  /**
   * Creates a new seller_identifier RecordBuilder.
   * @return A new seller_identifier RecordBuilder
   */
  public static com.flipkart.marketplace.listings.schema.reverse.listing.seller_identifier.Builder newBuilder() {
    return new com.flipkart.marketplace.listings.schema.reverse.listing.seller_identifier.Builder();
  }

  /**
   * Creates a new seller_identifier RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new seller_identifier RecordBuilder
   */
  public static com.flipkart.marketplace.listings.schema.reverse.listing.seller_identifier.Builder newBuilder(com.flipkart.marketplace.listings.schema.reverse.listing.seller_identifier.Builder other) {
    return new com.flipkart.marketplace.listings.schema.reverse.listing.seller_identifier.Builder(other);
  }

  /**
   * Creates a new seller_identifier RecordBuilder by copying an existing seller_identifier instance.
   * @param other The existing instance to copy.
   * @return A new seller_identifier RecordBuilder
   */
  public static com.flipkart.marketplace.listings.schema.reverse.listing.seller_identifier.Builder newBuilder(com.flipkart.marketplace.listings.schema.reverse.listing.seller_identifier other) {
    return new com.flipkart.marketplace.listings.schema.reverse.listing.seller_identifier.Builder(other);
  }

  /**
   * RecordBuilder for seller_identifier instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<seller_identifier>
    implements org.apache.avro.data.RecordBuilder<seller_identifier> {

    private java.lang.CharSequence product_id;
    private java.lang.CharSequence sku_id;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.flipkart.marketplace.listings.schema.reverse.listing.seller_identifier.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.product_id)) {
        this.product_id = data().deepCopy(fields()[0].schema(), other.product_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sku_id)) {
        this.sku_id = data().deepCopy(fields()[1].schema(), other.sku_id);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing seller_identifier instance
     * @param other The existing instance to copy.
     */
    private Builder(com.flipkart.marketplace.listings.schema.reverse.listing.seller_identifier other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.product_id)) {
        this.product_id = data().deepCopy(fields()[0].schema(), other.product_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sku_id)) {
        this.sku_id = data().deepCopy(fields()[1].schema(), other.sku_id);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'product_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getProductId() {
      return product_id;
    }

    /**
      * Sets the value of the 'product_id' field.
      * @param value The value of 'product_id'.
      * @return This builder.
      */
    public com.flipkart.marketplace.listings.schema.reverse.listing.seller_identifier.Builder setProductId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.product_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'product_id' field has been set.
      * @return True if the 'product_id' field has been set, false otherwise.
      */
    public boolean hasProductId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'product_id' field.
      * @return This builder.
      */
    public com.flipkart.marketplace.listings.schema.reverse.listing.seller_identifier.Builder clearProductId() {
      product_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'sku_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getSkuId() {
      return sku_id;
    }

    /**
      * Sets the value of the 'sku_id' field.
      * @param value The value of 'sku_id'.
      * @return This builder.
      */
    public com.flipkart.marketplace.listings.schema.reverse.listing.seller_identifier.Builder setSkuId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.sku_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'sku_id' field has been set.
      * @return True if the 'sku_id' field has been set, false otherwise.
      */
    public boolean hasSkuId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'sku_id' field.
      * @return This builder.
      */
    public com.flipkart.marketplace.listings.schema.reverse.listing.seller_identifier.Builder clearSkuId() {
      sku_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public seller_identifier build() {
      try {
        seller_identifier record = new seller_identifier();
        record.product_id = fieldSetFlags()[0] ? this.product_id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.sku_id = fieldSetFlags()[1] ? this.sku_id : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
