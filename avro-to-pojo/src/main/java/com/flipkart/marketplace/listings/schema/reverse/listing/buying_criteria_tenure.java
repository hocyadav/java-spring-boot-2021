/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.flipkart.marketplace.listings.schema.reverse.listing;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class buying_criteria_tenure extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1801465451628291021L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"buying_criteria_tenure\",\"namespace\":\"com.flipkart.marketplace.listings.schema.reverse.listing\",\"fields\":[{\"name\":\"end\",\"type\":\"int\",\"presentationName\":\"Tenure End\",\"description\":\"End of the tenure\"},{\"name\":\"start\",\"type\":\"int\",\"presentationName\":\"Tenure Start\",\"description\":\"Start of the tenure\"},{\"name\":\"unit\",\"type\":\"string\",\"presentationName\":\"Tenure Unit\",\"description\":\"Unit of the tenure\"}],\"version\":\"1.0\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int end;
  @Deprecated public int start;
  @Deprecated public java.lang.CharSequence unit;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public buying_criteria_tenure() {}

  /**
   * All-args constructor.
   * @param end The new value for end
   * @param start The new value for start
   * @param unit The new value for unit
   */
  public buying_criteria_tenure(java.lang.Integer end, java.lang.Integer start, java.lang.CharSequence unit) {
    this.end = end;
    this.start = start;
    this.unit = unit;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return end;
    case 1: return start;
    case 2: return unit;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: end = (java.lang.Integer)value$; break;
    case 1: start = (java.lang.Integer)value$; break;
    case 2: unit = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'end' field.
   * @return The value of the 'end' field.
   */
  public java.lang.Integer getEnd() {
    return end;
  }

  /**
   * Sets the value of the 'end' field.
   * @param value the value to set.
   */
  public void setEnd(java.lang.Integer value) {
    this.end = value;
  }

  /**
   * Gets the value of the 'start' field.
   * @return The value of the 'start' field.
   */
  public java.lang.Integer getStart() {
    return start;
  }

  /**
   * Sets the value of the 'start' field.
   * @param value the value to set.
   */
  public void setStart(java.lang.Integer value) {
    this.start = value;
  }

  /**
   * Gets the value of the 'unit' field.
   * @return The value of the 'unit' field.
   */
  public java.lang.CharSequence getUnit() {
    return unit;
  }

  /**
   * Sets the value of the 'unit' field.
   * @param value the value to set.
   */
  public void setUnit(java.lang.CharSequence value) {
    this.unit = value;
  }

  /**
   * Creates a new buying_criteria_tenure RecordBuilder.
   * @return A new buying_criteria_tenure RecordBuilder
   */
  public static com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure.Builder newBuilder() {
    return new com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure.Builder();
  }

  /**
   * Creates a new buying_criteria_tenure RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new buying_criteria_tenure RecordBuilder
   */
  public static com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure.Builder newBuilder(com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure.Builder other) {
    return new com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure.Builder(other);
  }

  /**
   * Creates a new buying_criteria_tenure RecordBuilder by copying an existing buying_criteria_tenure instance.
   * @param other The existing instance to copy.
   * @return A new buying_criteria_tenure RecordBuilder
   */
  public static com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure.Builder newBuilder(com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure other) {
    return new com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure.Builder(other);
  }

  /**
   * RecordBuilder for buying_criteria_tenure instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<buying_criteria_tenure>
    implements org.apache.avro.data.RecordBuilder<buying_criteria_tenure> {

    private int end;
    private int start;
    private java.lang.CharSequence unit;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.end)) {
        this.end = data().deepCopy(fields()[0].schema(), other.end);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.start)) {
        this.start = data().deepCopy(fields()[1].schema(), other.start);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.unit)) {
        this.unit = data().deepCopy(fields()[2].schema(), other.unit);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing buying_criteria_tenure instance
     * @param other The existing instance to copy.
     */
    private Builder(com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.end)) {
        this.end = data().deepCopy(fields()[0].schema(), other.end);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.start)) {
        this.start = data().deepCopy(fields()[1].schema(), other.start);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.unit)) {
        this.unit = data().deepCopy(fields()[2].schema(), other.unit);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'end' field.
      * @return The value.
      */
    public java.lang.Integer getEnd() {
      return end;
    }

    /**
      * Sets the value of the 'end' field.
      * @param value The value of 'end'.
      * @return This builder.
      */
    public com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure.Builder setEnd(int value) {
      validate(fields()[0], value);
      this.end = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'end' field has been set.
      * @return True if the 'end' field has been set, false otherwise.
      */
    public boolean hasEnd() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'end' field.
      * @return This builder.
      */
    public com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure.Builder clearEnd() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'start' field.
      * @return The value.
      */
    public java.lang.Integer getStart() {
      return start;
    }

    /**
      * Sets the value of the 'start' field.
      * @param value The value of 'start'.
      * @return This builder.
      */
    public com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure.Builder setStart(int value) {
      validate(fields()[1], value);
      this.start = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'start' field has been set.
      * @return True if the 'start' field has been set, false otherwise.
      */
    public boolean hasStart() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'start' field.
      * @return This builder.
      */
    public com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure.Builder clearStart() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'unit' field.
      * @return The value.
      */
    public java.lang.CharSequence getUnit() {
      return unit;
    }

    /**
      * Sets the value of the 'unit' field.
      * @param value The value of 'unit'.
      * @return This builder.
      */
    public com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure.Builder setUnit(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.unit = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'unit' field has been set.
      * @return True if the 'unit' field has been set, false otherwise.
      */
    public boolean hasUnit() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'unit' field.
      * @return This builder.
      */
    public com.flipkart.marketplace.listings.schema.reverse.listing.buying_criteria_tenure.Builder clearUnit() {
      unit = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public buying_criteria_tenure build() {
      try {
        buying_criteria_tenure record = new buying_criteria_tenure();
        record.end = fieldSetFlags()[0] ? this.end : (java.lang.Integer) defaultValue(fields()[0]);
        record.start = fieldSetFlags()[1] ? this.start : (java.lang.Integer) defaultValue(fields()[1]);
        record.unit = fieldSetFlags()[2] ? this.unit : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
